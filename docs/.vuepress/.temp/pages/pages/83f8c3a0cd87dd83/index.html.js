export const data = JSON.parse("{\"key\":\"v-34365b64\",\"path\":\"/pages/83f8c3a0cd87dd83/\",\"title\":\"Class 的继承\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Class 的继承\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/83f8c3a0cd87dd83\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"class-的继承\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#class-的继承\\\" aria-hidden=\\\"true\\\">#</a> Class 的继承</h1>\\n<h2 id=\\\"简介\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#简介\\\" aria-hidden=\\\"true\\\">#</a> 简介</h2>\\n<p>Class 可以通过<code v-pre>extends</code>关键字实现继承，这比 ES5 的通过修改原型链实现继承，要清晰和方便很多。</p>\\n<div class=\\\"language-javascript ext-js line-numbers-mode\\\"><pre v-pre class=\\\"language-javascript\\\"><code>class Point {\\n}\\n\\nclass ColorPoint extends Point {\\n}\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"headers\":[{\"level\":2,\"title\":\"简介\",\"slug\":\"简介\",\"children\":[]},{\"level\":2,\"title\":\"Object.getPrototypeOf()\",\"slug\":\"object-getprototypeof\",\"children\":[]},{\"level\":2,\"title\":\"super 关键字\",\"slug\":\"super-关键字\",\"children\":[]},{\"level\":2,\"title\":\"类的 prototype 属性和__proto__属性\",\"slug\":\"类的-prototype-属性和-proto-属性\",\"children\":[{\"level\":3,\"title\":\"实例的 __proto__ 属性\",\"slug\":\"实例的-proto-属性\",\"children\":[]}]},{\"level\":2,\"title\":\"原生构造函数的继承\",\"slug\":\"原生构造函数的继承\",\"children\":[]},{\"level\":2,\"title\":\"Mixin 模式的实现\",\"slug\":\"mixin-模式的实现\",\"children\":[]}]}")
