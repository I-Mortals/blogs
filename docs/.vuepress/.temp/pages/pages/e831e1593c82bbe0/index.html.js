export const data = JSON.parse("{\"key\":\"v-45b36475\",\"path\":\"/pages/e831e1593c82bbe0/\",\"title\":\"Class 的基本语法\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Class 的基本语法\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/e831e1593c82bbe0\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"class-的基本语法\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#class-的基本语法\\\" aria-hidden=\\\"true\\\">#</a> Class 的基本语法</h1>\\n<h2 id=\\\"简介\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#简介\\\" aria-hidden=\\\"true\\\">#</a> 简介</h2>\\n<h3 id=\\\"类的由来\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#类的由来\\\" aria-hidden=\\\"true\\\">#</a> 类的由来</h3>\\n<p>JavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。</p>\\n<div class=\\\"language-javascript ext-js line-numbers-mode\\\"><pre v-pre class=\\\"language-javascript\\\"><code>function Point(x, y) {\\n  this.x = x;\\n  this.y = y;\\n}\\n\\nPoint.prototype.toString = function () {\\n  return '(' + this.x + ', ' + this.y + ')';\\n};\\n\\nvar p = new Point(1, 2);\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"headers\":[{\"level\":2,\"title\":\"简介\",\"slug\":\"简介\",\"children\":[{\"level\":3,\"title\":\"类的由来\",\"slug\":\"类的由来\",\"children\":[]},{\"level\":3,\"title\":\"constructor 方法\",\"slug\":\"constructor-方法\",\"children\":[]},{\"level\":3,\"title\":\"类的实例\",\"slug\":\"类的实例\",\"children\":[]},{\"level\":3,\"title\":\"取值函数（getter）和存值函数（setter）\",\"slug\":\"取值函数-getter-和存值函数-setter\",\"children\":[]},{\"level\":3,\"title\":\"属性表达式\",\"slug\":\"属性表达式\",\"children\":[]},{\"level\":3,\"title\":\"Class 表达式\",\"slug\":\"class-表达式\",\"children\":[]},{\"level\":3,\"title\":\"注意点\",\"slug\":\"注意点\",\"children\":[]}]},{\"level\":2,\"title\":\"静态方法\",\"slug\":\"静态方法\",\"children\":[]},{\"level\":2,\"title\":\"实例属性的新写法\",\"slug\":\"实例属性的新写法\",\"children\":[]},{\"level\":2,\"title\":\"静态属性\",\"slug\":\"静态属性\",\"children\":[]},{\"level\":2,\"title\":\"私有方法和私有属性\",\"slug\":\"私有方法和私有属性\",\"children\":[{\"level\":3,\"title\":\"现有的解决方案\",\"slug\":\"现有的解决方案\",\"children\":[]},{\"level\":3,\"title\":\"私有属性的提案\",\"slug\":\"私有属性的提案\",\"children\":[]}]},{\"level\":2,\"title\":\"new.target 属性\",\"slug\":\"new-target-属性\",\"children\":[]}]}")
