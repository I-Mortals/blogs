export const data = JSON.parse("{\"key\":\"v-01264681\",\"path\":\"/pages/32c35f7651d6e58e/\",\"title\":\"读懂 ECMAScript 规格\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"读懂 ECMAScript 规格\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/32c35f7651d6e58e\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"读懂-ecmascript-规格\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#读懂-ecmascript-规格\\\" aria-hidden=\\\"true\\\">#</a> 读懂 ECMAScript 规格</h1>\\n<h2 id=\\\"概述\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#概述\\\" aria-hidden=\\\"true\\\">#</a> 概述</h2>\\n<p>规格文件是计算机语言的官方标准，详细描述语法规则和实现方法。</p>\\n<p>一般来说，没有必要阅读规格，除非你要写编译器。因为规格写得非常抽象和精炼，又缺乏实例，不容易理解，而且对于解决实际的应用问题，帮助不大。但是，如果你遇到疑难的语法问题，实在找不到答案，这时可以去查看规格文件，了解语言标准是怎么说的。规格是解决问题的“最后一招”。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"概述\",\"slug\":\"概述\",\"children\":[]},{\"level\":2,\"title\":\"术语\",\"slug\":\"术语\",\"children\":[{\"level\":3,\"title\":\"抽象操作\",\"slug\":\"抽象操作\",\"children\":[]},{\"level\":3,\"title\":\"Record 和 field\",\"slug\":\"record-和-field\",\"children\":[]},{\"level\":3,\"title\":\"[[Notation]]\",\"slug\":\"notation\",\"children\":[]},{\"level\":3,\"title\":\"Completion Record\",\"slug\":\"completion-record\",\"children\":[]}]},{\"level\":2,\"title\":\"抽象操作的标准流程\",\"slug\":\"抽象操作的标准流程\",\"children\":[]},{\"level\":2,\"title\":\"相等运算符\",\"slug\":\"相等运算符\",\"children\":[]},{\"level\":2,\"title\":\"数组的空位\",\"slug\":\"数组的空位\",\"children\":[]},{\"level\":2,\"title\":\"数组的 map 方法\",\"slug\":\"数组的-map-方法\",\"children\":[]}]}")
