export const data = JSON.parse("{\"key\":\"v-583da75e\",\"path\":\"/pages/e85e68947502cf90/\",\"title\":\"对象的新增方法\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"对象的新增方法\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/e85e68947502cf90\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"对象的新增方法\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#对象的新增方法\\\" aria-hidden=\\\"true\\\">#</a> 对象的新增方法</h1>\\n<p>本章介绍 Object 对象的新增方法。</p>\\n<h2 id=\\\"object-is\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#object-is\\\" aria-hidden=\\\"true\\\">#</a> Object.is()</h2>\\n<p>ES5 比较两个值是否相等，只有两个运算符：相等运算符（<code v-pre>==</code>）和严格相等运算符（<code v-pre>===</code>）。它们都有缺点，前者会自动转换数据类型，后者的<code v-pre>NaN</code>不等于自身，以及<code v-pre>+0</code>等于<code v-pre>-0</code>。JavaScript 缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。</p>\\n<p>ES6 提出“Same-value equality”（同值相等）算法，用来解决这个问题。<code v-pre>Object.is</code>就是部署这个算法的新方法。它用来比较两个值是否严格相等，与严格比较运算符（===）的行为基本一致。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"Object.is()\",\"slug\":\"object-is\",\"children\":[]},{\"level\":2,\"title\":\"Object.assign()\",\"slug\":\"object-assign\",\"children\":[{\"level\":3,\"title\":\"基本用法\",\"slug\":\"基本用法\",\"children\":[]},{\"level\":3,\"title\":\"注意点\",\"slug\":\"注意点\",\"children\":[]},{\"level\":3,\"title\":\"常见用途\",\"slug\":\"常见用途\",\"children\":[]}]},{\"level\":2,\"title\":\"Object.getOwnPropertyDescriptors()\",\"slug\":\"object-getownpropertydescriptors\",\"children\":[]},{\"level\":2,\"title\":\"__proto__属性，Object.setPrototypeOf()，Object.getPrototypeOf()\",\"slug\":\"proto-属性-object-setprototypeof-object-getprototypeof\",\"children\":[{\"level\":3,\"title\":\"__proto__属性\",\"slug\":\"proto-属性\",\"children\":[]},{\"level\":3,\"title\":\"Object.setPrototypeOf()\",\"slug\":\"object-setprototypeof\",\"children\":[]},{\"level\":3,\"title\":\"Object.getPrototypeOf()\",\"slug\":\"object-getprototypeof\",\"children\":[]}]},{\"level\":2,\"title\":\"Object.keys()，Object.values()，Object.entries()\",\"slug\":\"object-keys-object-values-object-entries\",\"children\":[{\"level\":3,\"title\":\"Object.keys()\",\"slug\":\"object-keys\",\"children\":[]},{\"level\":3,\"title\":\"Object.values()\",\"slug\":\"object-values\",\"children\":[]},{\"level\":3,\"title\":\"Object.entries()\",\"slug\":\"object-entries\",\"children\":[]}]},{\"level\":2,\"title\":\"Object.fromEntries()\",\"slug\":\"object-fromentries\",\"children\":[]}]}")
