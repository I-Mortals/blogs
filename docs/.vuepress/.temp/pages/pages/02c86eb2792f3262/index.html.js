export const data = JSON.parse("{\"key\":\"v-1b56e478\",\"path\":\"/pages/02c86eb2792f3262/\",\"title\":\"Symbol\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Symbol\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/02c86eb2792f3262\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"symbol\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#symbol\\\" aria-hidden=\\\"true\\\">#</a> Symbol</h1>\\n<h2 id=\\\"概述\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#概述\\\" aria-hidden=\\\"true\\\">#</a> 概述</h2>\\n<p>ES5 的对象属性名都是字符串，这容易造成属性名的冲突。比如，你使用了一个他人提供的对象，但又想为这个对象添加新的方法（mixin 模式），新方法的名字就有可能与现有方法产生冲突。如果有一种机制，<strong>保证每个属性的名字都是独一无二</strong>的就好了，这样就从根本上防止属性名的冲突。这就是 ES6 引入<code v-pre>Symbol</code>的原因。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"概述\",\"slug\":\"概述\",\"children\":[]},{\"level\":2,\"title\":\"Symbol.prototype.description\",\"slug\":\"symbol-prototype-description\",\"children\":[]},{\"level\":2,\"title\":\"作为属性名的 Symbol\",\"slug\":\"作为属性名的-symbol\",\"children\":[]},{\"level\":2,\"title\":\"实例：消除魔术字符串\",\"slug\":\"实例-消除魔术字符串\",\"children\":[]},{\"level\":2,\"title\":\"属性名的遍历\",\"slug\":\"属性名的遍历\",\"children\":[]},{\"level\":2,\"title\":\"Symbol.for()，Symbol.keyFor()\",\"slug\":\"symbol-for-symbol-keyfor\",\"children\":[]},{\"level\":2,\"title\":\"实例：模块的 Singleton 模式\",\"slug\":\"实例-模块的-singleton-模式\",\"children\":[]},{\"level\":2,\"title\":\"内置的 Symbol 值\",\"slug\":\"内置的-symbol-值\",\"children\":[{\"level\":3,\"title\":\"Symbol.hasInstance\",\"slug\":\"symbol-hasinstance\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.isConcatSpreadable\",\"slug\":\"symbol-isconcatspreadable\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.species\",\"slug\":\"symbol-species\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.match\",\"slug\":\"symbol-match\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.replace\",\"slug\":\"symbol-replace\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.search\",\"slug\":\"symbol-search\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.split\",\"slug\":\"symbol-split\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.iterator\",\"slug\":\"symbol-iterator\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.toPrimitive\",\"slug\":\"symbol-toprimitive\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.toStringTag\",\"slug\":\"symbol-tostringtag\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.unscopables\",\"slug\":\"symbol-unscopables\",\"children\":[]}]}]}")
