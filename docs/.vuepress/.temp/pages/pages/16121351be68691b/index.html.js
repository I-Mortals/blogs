export const data = JSON.parse("{\"key\":\"v-22183a64\",\"path\":\"/pages/16121351be68691b/\",\"title\":\"异步遍历器\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"异步遍历器\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/16121351be68691b\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"异步遍历器\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#异步遍历器\\\" aria-hidden=\\\"true\\\">#</a> 异步遍历器</h1>\\n<h2 id=\\\"同步遍历器的问题\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#同步遍历器的问题\\\" aria-hidden=\\\"true\\\">#</a> 同步遍历器的问题</h2>\\n<p>《遍历器》一章说过，Iterator 接口是一种数据遍历的协议，只要调用遍历器对象的<code v-pre>next</code>方法，就会得到一个对象，表示当前遍历指针所在的那个位置的信息。<code v-pre>next</code>方法返回的对象的结构是<code v-pre>{value, done}</code>，其中<code v-pre>value</code>表示当前的数据的值，<code v-pre>done</code>是一个布尔值，表示遍历是否结束。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"同步遍历器的问题\",\"slug\":\"同步遍历器的问题\",\"children\":[]},{\"level\":2,\"title\":\"异步遍历的接口\",\"slug\":\"异步遍历的接口\",\"children\":[]},{\"level\":2,\"title\":\"for await...of\",\"slug\":\"for-await-of\",\"children\":[]},{\"level\":2,\"title\":\"异步 Generator 函数\",\"slug\":\"异步-generator-函数\",\"children\":[]},{\"level\":2,\"title\":\"yield* 语句\",\"slug\":\"yield-语句\",\"children\":[]}]}")
