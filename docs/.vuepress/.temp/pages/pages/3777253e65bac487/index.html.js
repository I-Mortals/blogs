export const data = JSON.parse("{\"key\":\"v-593fb838\",\"path\":\"/pages/3777253e65bac487/\",\"title\":\"async 函数\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"async 函数\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/3777253e65bac487\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"async-函数\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#async-函数\\\" aria-hidden=\\\"true\\\">#</a> async 函数</h1>\\n<h2 id=\\\"含义\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#含义\\\" aria-hidden=\\\"true\\\">#</a> 含义</h2>\\n<p>ES2017 标准引入了 async 函数，使得异步操作变得更加方便。</p>\\n<p>async 函数是什么？一句话，它就<strong>是 Generator 函数的语法糖</strong>。</p>\\n<p>前文有一个 Generator 函数，依次读取两个文件。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"含义\",\"slug\":\"含义\",\"children\":[]},{\"level\":2,\"title\":\"基本用法\",\"slug\":\"基本用法\",\"children\":[]},{\"level\":2,\"title\":\"语法\",\"slug\":\"语法\",\"children\":[{\"level\":3,\"title\":\"返回 Promise 对象\",\"slug\":\"返回-promise-对象\",\"children\":[]},{\"level\":3,\"title\":\"Promise 对象的状态变化\",\"slug\":\"promise-对象的状态变化\",\"children\":[]},{\"level\":3,\"title\":\"await 命令\",\"slug\":\"await-命令\",\"children\":[]},{\"level\":3,\"title\":\"错误处理\",\"slug\":\"错误处理\",\"children\":[]},{\"level\":3,\"title\":\"使用注意点\",\"slug\":\"使用注意点\",\"children\":[]}]},{\"level\":2,\"title\":\"async 函数的实现原理\",\"slug\":\"async-函数的实现原理\",\"children\":[]},{\"level\":2,\"title\":\"与其他异步处理方法的比较\",\"slug\":\"与其他异步处理方法的比较\",\"children\":[]},{\"level\":2,\"title\":\"实例：按顺序完成异步操作\",\"slug\":\"实例-按顺序完成异步操作\",\"children\":[]},{\"level\":2,\"title\":\"顶层 await\",\"slug\":\"顶层-await\",\"children\":[]}]}")
