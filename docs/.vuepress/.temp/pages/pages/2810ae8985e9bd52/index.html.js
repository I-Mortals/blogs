export const data = JSON.parse("{\"key\":\"v-736c6f9e\",\"path\":\"/pages/2810ae8985e9bd52/\",\"title\":\"Promise 对象\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Promise 对象\",\"date\":\"2020-02-09T16:00:29.000Z\",\"permalink\":\"/pages/2810ae8985e9bd52\",\"author\":\"阮一峰\",\"categories\":[\"《ES6 教程》笔记\"],\"tags\":[\"ES6\"]},\"excerpt\":\"<h1 id=\\\"promise-对象\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#promise-对象\\\" aria-hidden=\\\"true\\\">#</a> Promise 对象</h1>\\n<h2 id=\\\"promise-的含义\\\" tabindex=\\\"-1\\\"><a class=\\\"header-anchor\\\" href=\\\"#promise-的含义\\\" aria-hidden=\\\"true\\\">#</a> Promise 的含义</h2>\\n<p>Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。它由社区最早提出和实现，ES6 将其写进了语言标准，统一了用法，原生提供了<code v-pre>Promise</code>对象。</p>\\n\",\"headers\":[{\"level\":2,\"title\":\"Promise 的含义\",\"slug\":\"promise-的含义\",\"children\":[]},{\"level\":2,\"title\":\"基本用法\",\"slug\":\"基本用法\",\"children\":[]},{\"level\":2,\"title\":\"Promise.prototype.then()\",\"slug\":\"promise-prototype-then\",\"children\":[]},{\"level\":2,\"title\":\"Promise.prototype.catch()\",\"slug\":\"promise-prototype-catch\",\"children\":[]},{\"level\":2,\"title\":\"Promise.prototype.finally()\",\"slug\":\"promise-prototype-finally\",\"children\":[]},{\"level\":2,\"title\":\"Promise.all()\",\"slug\":\"promise-all\",\"children\":[]},{\"level\":2,\"title\":\"Promise.race()\",\"slug\":\"promise-race\",\"children\":[]},{\"level\":2,\"title\":\"Promise.allSettled()\",\"slug\":\"promise-allsettled\",\"children\":[]},{\"level\":2,\"title\":\"Promise.any()\",\"slug\":\"promise-any\",\"children\":[]},{\"level\":2,\"title\":\"Promise.resolve()\",\"slug\":\"promise-resolve\",\"children\":[]},{\"level\":2,\"title\":\"Promise.reject()\",\"slug\":\"promise-reject\",\"children\":[]},{\"level\":2,\"title\":\"应用\",\"slug\":\"应用\",\"children\":[{\"level\":3,\"title\":\"加载图片\",\"slug\":\"加载图片\",\"children\":[]},{\"level\":3,\"title\":\"Generator 函数与 Promise 的结合\",\"slug\":\"generator-函数与-promise-的结合\",\"children\":[]}]},{\"level\":2,\"title\":\"Promise.try()\",\"slug\":\"promise-try\",\"children\":[]}]}")
